version: '3.5'
services:
  webpack:
    build:
      context: .
      dockerfile: Dockerfile-webpack
    volumes:
      - ./web:/usr/src/app
    restart: unless-stopped
    ports:
      - "8181:8181"
      - "8081:8081"
  server:
    build:
      context: .
      dockerfile: Dockerfile-server
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
    depends_on:
      - mongo
      - nginx
    environment:
      - VIRTUAL_HOST=website.local
      - VIRTUAL_PORT=80
    ports:
      - "8000:8000"
  mongo:
    image: "mongo:3.4.5"
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - db-volume:/data/db
  nginx:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx/html:/usr/share/nginx/html
      - ./docker/nginx/certs:/etc/nginx/certs:ro
  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: nginx-gen
    restart: unless-stopped
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx/html:/usr/share/nginx/html
      - ./docker/nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

volumes:
  db-volume:
